// DO NOT EDIT
// Generated by: go run 9font.go -samedir bit/dejavusansbd/dejavusansbd.16.font

package dejavusansbd16

import (
	"image"

	"github.com/embeddedgo/display/font/subfont/font9"
	"github.com/embeddedgo/display/images"
)

// Xfff9 font data, 402 bytes, orgbpp: 8
var Xfff9 = font9.Variable{
	Info: infoXfff9, // 30 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -15},
			Max: image.Point{X: 18, Y: 3},
		},
		LogN:   3, // 8 bpp
		Stride: 18,
		Pix:    pixXfff9, // 324 bytes
	},
}

// Xfe00 font data, 34338 bytes, orgbpp: 8
var Xfe00 = font9.Variable{
	Info: infoXfe00, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -16},
			Max: image.Point{X: 1657, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 1663,
		Pix:    pixXfe00, // 33260 bytes
	},
}

// Xfb00 font data, 36358 bytes, orgbpp: 8
var Xfb00 = font9.Variable{
	Info: infoXfb00, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -16},
			Max: image.Point{X: 1754, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 1764,
		Pix:    pixXfb00, // 35280 bytes
	},
}

// Xf6c5 font data, 1232 bytes, orgbpp: 8
var Xf6c5 = font9.Variable{
	Info: infoXf6c5, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -13},
			Max: image.Point{X: 11, Y: 1},
		},
		LogN:   3, // 8 bpp
		Stride: 11,
		Pix:    pixXf6c5, // 154 bytes
	},
}

// Xef00 font data, 3028 bytes, orgbpp: 8
var Xef00 = font9.Variable{
	Info: infoXef00, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -12},
			Max: image.Point{X: 150, Y: 1},
		},
		LogN:   3, // 8 bpp
		Stride: 150,
		Pix:    pixXef00, // 1950 bytes
	},
}

// Xa746 font data, 8602 bytes, orgbpp: 8
var Xa746 = font9.Variable{
	Info: infoXa746, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -15},
			Max: image.Point{X: 395, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 396,
		Pix:    pixXa746, // 7524 bytes
	},
}

// Xa644 font data, 16157 bytes, orgbpp: 8
var Xa644 = font9.Variable{
	Info: infoXa644, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -13},
			Max: image.Point{X: 884, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 887,
		Pix:    pixXa644, // 15079 bytes
	},
}

// X4dc0 font data, 13558 bytes, orgbpp: 8
var X4dc0 = font9.Variable{
	Info: infoX4dc0, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -12},
			Max: image.Point{X: 832, Y: 3},
		},
		LogN:   3, // 8 bpp
		Stride: 832,
		Pix:    pixX4dc0, // 12480 bytes
	},
}

// X2d61 font data, 2742 bytes, orgbpp: 8
var X2d61 = font9.Variable{
	Info: infoX2d61, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -13},
			Max: image.Point{X: 104, Y: 3},
		},
		LogN:   3, // 8 bpp
		Stride: 104,
		Pix:    pixX2d61, // 1664 bytes
	},
}

// X2c60 font data, 16864 bytes, orgbpp: 8
var X2c60 = font9.Variable{
	Info: infoX2c60, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -14},
			Max: image.Point{X: 875, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 877,
		Pix:    pixX2c60, // 15786 bytes
	},
}

// X2580 font data, 38931 bytes, orgbpp: 8
var X2580 = font9.Variable{
	Info: infoX2580, // 674 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -15},
			Max: image.Point{X: 1996, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 2011,
		Pix:    pixX2580, // 38209 bytes
	},
}

// X2422 font data, 3662 bytes, orgbpp: 8
var X2422 = font9.Variable{
	Info: infoX2422, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -13},
			Max: image.Point{X: 152, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 152,
		Pix:    pixX2422, // 2584 bytes
	},
}

// X1e01 font data, 40982 bytes, orgbpp: 8
var X1e01 = font9.Variable{
	Info: infoX1e01, // 834 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -16},
			Max: image.Point{X: 1717, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 2005,
		Pix:    pixX1e01, // 40100 bytes
	},
}

// X1d00 font data, 21546 bytes, orgbpp: 8
var X1d00 = font9.Variable{
	Info: infoX1d00, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -13},
			Max: image.Point{X: 1204, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 1204,
		Pix:    pixX1d00, // 20468 bytes
	},
}

// X1646 font data, 16620 bytes, orgbpp: 8
var X1646 = font9.Variable{
	Info: infoX1646, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -15},
			Max: image.Point{X: 811, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 818,
		Pix:    pixX1646, // 15542 bytes
	},
}

// X1401 font data, 32826 bytes, orgbpp: 8
var X1401 = font9.Variable{
	Info: infoX1401, // 634 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -15},
			Max: image.Point{X: 1949, Y: 1},
		},
		LogN:   3, // 8 bpp
		Stride: 2009,
		Pix:    pixX1401, // 32144 bytes
	},
}

// X10a0 font data, 15919 bytes, orgbpp: 8
var X10a0 = font9.Variable{
	Info: infoX10a0, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -13},
			Max: image.Point{X: 871, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 873,
		Pix:    pixX10a0, // 14841 bytes
	},
}

// X0e3f font data, 16498 bytes, orgbpp: 8
var X0e3f = font9.Variable{
	Info: infoX0e3f, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -16},
			Max: image.Point{X: 769, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 771,
		Pix:    pixX0e3f, // 15420 bytes
	},
}

// X07c0 font data, 8915 bytes, orgbpp: 8
var X07c0 = font9.Variable{
	Info: infoX07c0, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -13},
			Max: image.Point{X: 460, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 461,
		Pix:    pixX07c0, // 7837 bytes
	},
}

// X0606 font data, 37318 bytes, orgbpp: 8
var X0606 = font9.Variable{
	Info: infoX0606, // 1030 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -16},
			Max: image.Point{X: 1764, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 1812,
		Pix:    pixX0606, // 36240 bytes
	},
}

// X03c0 font data, 143 bytes, orgbpp: 8
var X03c0 = font9.Fixed{
	Left:  0,
	Adv:   10,
	Width: 11,
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -9},
			Max: image.Point{X: 11, Y: 0},
		},
		LogN:   3, // 8 bpp
		Stride: 11,
		Pix:    pixX03c0, // 99 bytes
	},
}

// X03a9 font data, 200 bytes, orgbpp: 8
var X03a9 = font9.Fixed{
	Left:  0,
	Adv:   12,
	Width: 13,
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -12},
			Max: image.Point{X: 13, Y: 0},
		},
		LogN:   3, // 8 bpp
		Stride: 13,
		Pix:    pixX03a9, // 156 bytes
	},
}

// X0101 font data, 40934 bytes, orgbpp: 8
var X0101 = font9.Variable{
	Info: infoX0101, // 826 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -16},
			Max: image.Point{X: 1999, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 2003,
		Pix:    pixX0101, // 40060 bytes
	},
}

// X00a0 font data, 18142 bytes, orgbpp: 8
var X00a0 = font9.Variable{
	Info: infoX00a0, // 386 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -16},
			Max: image.Point{X: 834, Y: 3},
		},
		LogN:   3, // 8 bpp
		Stride: 932,
		Pix:    pixX00a0, // 17708 bytes
	},
}

// X0020 font data, 15305 bytes, orgbpp: 8
var X0020 = font9.Variable{
	Info: infoX0020, // 382 bytes
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -13},
			Max: image.Point{X: 779, Y: 4},
		},
		LogN:   3, // 8 bpp
		Stride: 875,
		Pix:    pixX0020, // 14875 bytes
	},
}

// X0000 font data, 156 bytes, orgbpp: 8
var X0000 = font9.Fixed{
	Left:  0,
	Adv:   10,
	Width: 8,
	Bits: &images.ImmAlphaN{
		Rect: image.Rectangle{
			Min: image.Point{X: 0, Y: -11},
			Max: image.Point{X: 8, Y: 3},
		},
		LogN:   3, // 8 bpp
		Stride: 8,
		Pix:    pixX0000, // 112 bytes
	},
}
